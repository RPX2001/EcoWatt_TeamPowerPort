/*
 * ESP32 OTA Security Keys
 * Auto-generated by generate_keys.py
 * 
 * ⚠️  SECURITY WARNING: These keys are embedded in firmware!
 * ⚠️  In production, use secure key storage (efuse, secure boot, etc.)
 */

#ifndef OTA_KEYS_H
#define OTA_KEYS_H

#include <stdint.h>

// RSA-2048 Public Key for signature verification
const char* SERVER_PUBLIC_KEY = 
    "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsQ8Pqe/fv8u0voGPk0/7\nZlNk7ktc6USP3RNCjnlY19HMk86dULDrXZ257oCinbtz0/TVCGVjZmJiFtubeVzW\nA5nCZKcfMeimBUXEy9Yrux9xnSSxZPYJv2UEasAq24qTr8WAAUWYyyfhqZKVX5S3\novtL0lo/936beQK+X9DNWWjy05B3JgurS3axuPTX36mclcgPyTDpgiBQ5N3uzoKl\nIZJKO0x9g33wPqnkQd6q7SJuA4nMvIoXXGcKSK+nz6GEpR7NSx5kRZqsObdvYgd4\njxMtLImB+aVPnrA58gP/YKw+HZh4o5fLDYy6e/7VtNqVPTubOEPGrr0/T0s91Bo/\niwIDAQAB\n-----END PUBLIC KEY-----\n";

// AES-256 Key for firmware decryption (32 bytes)
const uint8_t AES_FIRMWARE_KEY[32] = {
    0x65, 0x4D, 0x23, 0xCD, 0x26, 0x59, 0xF4, 0xCC, 0x8B, 0xC0, 0x41, 0x55, 0x7D, 0x68, 0x54, 0x08, 0x34, 0x8F, 0xD7, 0x01, 0xA1, 0xA2, 0x61, 0xA8, 0x2A, 0x08, 0x7E, 0x49, 0x75, 0x3B, 0xC4, 0x07
};

// HMAC Pre-Shared Key for chunk authentication
const char* HMAC_PSK = "16ecd7da91ce8db9c0de79be4da968e98923a3bca23e2581dfa24bce23297a54";

// Key metadata
#define RSA_KEY_SIZE 2048
#define AES_KEY_SIZE 256
#define HMAC_PSK_SIZE 64

#endif // OTA_KEYS_H
